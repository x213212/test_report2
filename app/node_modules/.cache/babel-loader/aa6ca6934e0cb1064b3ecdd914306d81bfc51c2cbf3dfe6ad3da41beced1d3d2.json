{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Line, {\n    id: \"my-chart-id\",\n    options: $data.chartOptions,\n    data: $data.chartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Line","id","options","$data","chartOptions","data","chartData"],"sources":["/root/Django/myproject/app/src/components/BarChart.vue"],"sourcesContent":["<template>\n  <div>\n    <Line id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n  </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineController, CategoryScale, LinearScale, PointElement } from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, LineController, CategoryScale, LinearScale, PointElement)\n\nexport default {\n  name: 'LineChart',\n  components: { Line },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Score',\n            data: [40, 20, 12],\n            fill: false,\n            borderColor: 'rgba(54, 162, 235, 1)',\n            backgroundColor: 'rgba(54, 162, 235, 0.1)',\n            pointRadius: 4,\n            pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n            pointStyle: 'circle'\n          }\n        ]\n      },\n      chartOptions: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }\n  },\n  created() {\n    this.convertTimestampToDate();\n  },\n  methods: {\n    convertTimestampToDate() {\n      const timestamps = [840441600000, 840528000000, 840614400000]; // Timestamps to convert\n      const dateLabels = timestamps.map(timestamp => {\n        const date = new Date(timestamp);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return `${year}/${month}/${day}`;\n      });\n\n      this.chartData.labels = dateLabels;\n    }\n  }\n}\n</script>"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAmEC,eAAA;IAA7DC,EAAE,EAAC,aAAa;IAAEC,OAAO,EAAEC,KAAA,CAAAC,YAAY;IAAGC,IAAI,EAAEF,KAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}