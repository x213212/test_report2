[{"/root/Django/myproject/app/src/main.ts":"1","/root/Django/myproject/app/src/App.vue":"2","/root/Django/myproject/app/src/components/HelloWorld.vue":"3","/root/Django/myproject/app/src/components/BarChart.vue":"4","/root/Django/myproject/app/src/components/TableV.vue":"5"},{"size":204,"mtime":1685028826960,"results":"6","hashOfConfig":"7"},{"size":2510,"mtime":1685030964408,"results":"8","hashOfConfig":"7"},{"size":2683,"mtime":1685029490846,"results":"9","hashOfConfig":"7"},{"size":2162,"mtime":1685029110573,"results":"10","hashOfConfig":"7"},{"size":1776,"mtime":1685030022323,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9gfsbq",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},"/root/Django/myproject/app/src/main.ts",[],[],"/root/Django/myproject/app/src/App.vue",[],"/root/Django/myproject/app/src/components/HelloWorld.vue",[],[],"/root/Django/myproject/app/src/components/BarChart.vue",[],"/root/Django/myproject/app/src/components/TableV.vue",["25","26"],"<template>\n  <el-table-v2\n    :columns=\"columns\"\n    :data=\"data\"\n    :row-class=\"rowClass\"\n    :width=\"700\"\n    :height=\"400\"\n  />\n</template>\n\n<script lang=\"tsx\" setup>\nimport { ref } from 'vue'\nimport dayjs from 'dayjs'\nimport {\n  ElButton,\n  ElIcon,\n  ElTag,\n  ElTooltip,\n  TableV2FixedDir,\n} from 'element-plus'\nimport { Timer } from '@element-plus/icons-vue'\n\nimport type { Column, RowClassNameGetter } from 'element-plus'\n\nlet id = 0\n\nconst dataGenerator = () => ({\n  id: `random-id-${++id}`,\n  name: 'Tom',\n  date: '2020-10-1',\n})\n\nconst columns: Column<any>[] = [\n  {\n    key: 'date',\n    title: 'Date',\n    dataKey: 'date',\n    width: 150,\n    fixed: TableV2FixedDir.LEFT,\n    cellRenderer: ({ cellData: date }) => (\n      <ElTooltip content={dayjs(date).format('YYYY/MM/DD')}>\n        {\n          <span class=\"flex items-center\">\n            <ElIcon class=\"mr-3\">\n              <Timer />\n            </ElIcon>\n            {dayjs(date).format('YYYY/MM/DD')}\n          </span>\n        }\n      </ElTooltip>\n    ),\n  },\n  {\n    key: 'name',\n    title: 'Name',\n    dataKey: 'name',\n    width: 150,\n    align: 'center',\n    cellRenderer: ({ cellData: name }) => <ElTag>{name}</ElTag>,\n  },\n  {\n    key: 'operations',\n    title: 'Operations',\n    cellRenderer: () => (\n      <>\n        <ElButton size=\"small\">Edit</ElButton>\n        <ElButton size=\"small\" type=\"danger\">\n          Delete\n        </ElButton>\n      </>\n    ),\n    width: 150,\n    align: 'center',\n    flexGrow: 1,\n  },\n]\n\nconst data = ref(Array.from({ length: 200 }).map(dataGenerator))\n\nconst rowClass = ({ rowIndex }: Parameters<RowClassNameGetter<any>>[0]) => {\n  if (rowIndex % 10 === 5) {\n    return 'bg-red-100'\n  } else if (rowIndex % 10 === 0) {\n    return 'bg-blue-200'\n  }\n  return ''\n}\n</script>\n",{"ruleId":"27","severity":1,"message":"28","line":33,"column":23,"nodeType":"29","messageId":"30","endLine":33,"endColumn":26,"suggestions":"31"},{"ruleId":"27","severity":1,"message":"28","line":80,"column":63,"nodeType":"29","messageId":"30","endLine":80,"endColumn":66,"suggestions":"32"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["33","34"],["35","36"],{"messageId":"37","fix":"38","desc":"39"},{"messageId":"40","fix":"41","desc":"42"},{"messageId":"37","fix":"43","desc":"39"},{"messageId":"40","fix":"44","desc":"42"},"suggestUnknown",{"range":"45","text":"46"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"45","text":"47"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"48","text":"46"},{"range":"48","text":"47"},[562,565],"unknown","never",[1619,1622]]